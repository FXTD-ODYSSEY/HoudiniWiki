[{"content":"幻灯片  # In the morning ___ ## Getting up - Turn off alarm - Get out of bed ___ ## Breakfast - Eat eggs - Drink coffee --- # In the evening ___ ## Dinner - Eat spaghetti - Drink wine ___ ## Going to sleep - Get in bed - Count sheep         function initSlides() { Reveal.initialize({ controls : false, center: true ,\thistory: false , progress: \"true\" , transition: \"concave\", plugins: [ RevealMarkdown, RevealHighlight, RevealNotes ], }); }   See it fullscreen var toto = document.getElementById('slideContent').innerHTML document.getElementById('slideFrame').contentWindow.document.write(document.getElementById('slideContent').innerHTML); document.getElementById('slideContent').remove(); document.addEventListener(\"DOMContentLoaded\",function(){ setTimeout(function () { document.getElementById('slideFrame').contentWindow.initSlides() ; }, 2000); }); function slideFullScreen() { document.open(); document.write(toto); document.close(); initSlides() }  columns 分栏 Left Content Lorem markdownum insigne\u0026hellip;  Mid Content Lorem markdownum insigne\u0026hellip;  Right Content Lorem markdownum insigne\u0026hellip;   attachmests {{/*\u0026lt;attachmests /\u0026gt;*/}} relink 链接指向 attributeCreate   testAAA  pannel panel titlethis is a panel text\nasdasfq  ","description":"博客支持的 ShortCodes 汇总","id":0,"section":"blog","tags":["ShortCodes"],"title":"ShortCodes 汇总","uri":"https://hou.l0v0.com/zh/blog/91d7f687/"},{"content":"wavedrom { \u0026quot;signal\u0026quot;: [ {\u0026quot;name\u0026quot;: \u0026quot;CLK\u0026quot;, \u0026quot;wave\u0026quot;: \u0026quot;p.....|...\u0026quot;}, {\u0026quot;name\u0026quot;:\u0026quot;DAT\u0026quot;, \u0026quot;wave\u0026quot;:\u0026quot;x.345x|=.x\u0026quot;, \u0026quot;data\u0026quot;:[\u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;,\u0026quot;C\u0026quot;,\u0026quot;D\u0026quot;]}, {\u0026quot;name\u0026quot;: \u0026quot;REQ\u0026quot;, \u0026quot;wave\u0026quot;: \u0026quot;0.1..0|1.0\u0026quot;}, {}, {\u0026quot;name\u0026quot;: \u0026quot;ACK\u0026quot;, \u0026quot;wave\u0026quot;: \u0026quot;1.....|01.\u0026quot;} ] } Viz digraph G { subgraph cluster_0 { style=filled; color=lightgrey; node [style=filled,color=white]; a0 -\u0026gt; a1 -\u0026gt; a2 -\u0026gt; a3; label = \u0026quot;process #1\u0026quot;; } subgraph cluster_1 { node [style=filled]; b0 -\u0026gt; b1 -\u0026gt; b2 -\u0026gt; b3; label = \u0026quot;process #2\u0026quot;; color=blue } start -\u0026gt; a0; start -\u0026gt; b0; a1 -\u0026gt; b3; b2 -\u0026gt; a3; a3 -\u0026gt; a0; a3 -\u0026gt; end; b3 -\u0026gt; end; start [shape=Mdiamond]; end [shape=Msquare]; } mathjax When $a \\ne 0$, there are two solutions to $(ax^2 + bx + c = 0)$ and they are\n$$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.$$\nkatex $$ \\int_{a}^{b} x^2 dx $$\nJS Sequence Diagram Title: Here is a title A-\u0026gt;B: Normal line B--\u0026gt;C: Dashed line C-\u0026gt;\u0026gt;D: Open arrow D--\u0026gt;\u0026gt;A: Dashed open arrow flowchartjs st=\u0026gt;start: Start|past:\u0026gt;http://www.google.com[blank] e=\u0026gt;end: End|future:\u0026gt;http://www.google.com op1=\u0026gt;operation: My Operation|past op2=\u0026gt;operation: Stuff|current sub1=\u0026gt;subroutine: My Subroutine|invalid cond=\u0026gt;condition: Yes or No?|approved:\u0026gt;http://www.google.com c2=\u0026gt;condition: Good idea|rejected io=\u0026gt;inputoutput: catch something...|future st-\u0026gt;op1(right)-\u0026gt;cond cond(yes, right)-\u0026gt;c2 cond(no)-\u0026gt;sub1(left)-\u0026gt;op1 c2(yes)-\u0026gt;io-\u0026gt;e c2(no)-\u0026gt;op2-\u0026gt;e chart { \u0026quot;type\u0026quot;: \u0026quot;bar\u0026quot;, \u0026quot;data\u0026quot;: { \u0026quot;labels\u0026quot;: [\u0026quot;One\u0026quot;, \u0026quot;Two\u0026quot;, \u0026quot;Three\u0026quot;, \u0026quot;Four\u0026quot;, \u0026quot;Five\u0026quot;, \u0026quot;Six\u0026quot;], \u0026quot;datasets\u0026quot;: [{ \u0026quot;label\u0026quot;: \u0026quot;# of Votes\u0026quot;, \u0026quot;data\u0026quot;: [12, 19, 3, 5, 3, 8] }] } } Mermaid graph TD; A--\u0026gt;B; A--\u0026gt;C; B--\u0026gt;D; C--\u0026gt;D; ","description":"图标功能支持 汇总","id":1,"section":"blog","tags":["ShortCodes"],"title":"图标功能支持","uri":"https://hou.l0v0.com/zh/blog/91d7f687/"},{"content":"前言  # In the morning ___ ## Getting up - Turn off alarm - Get out of bed ___ ## Breakfast - Eat eggs - Drink coffee --- # In the evening ___ ## Dinner - Eat spaghetti - Drink wine ___ ## Going to sleep - Get in bed - Count sheep         function initSlides() { Reveal.initialize({ controls : false, center: true ,\thistory: false , progress: \"true\" , transition: \"concave\", plugins: [ RevealMarkdown, RevealHighlight, RevealNotes ], }); }   See it fullscreen var toto = document.getElementById('slideContent').innerHTML document.getElementById('slideFrame').contentWindow.document.write(document.getElementById('slideContent').innerHTML); document.getElementById('slideContent').remove(); document.addEventListener(\"DOMContentLoaded\",function(){ setTimeout(function () { document.getElementById('slideFrame').contentWindow.initSlides() ; }, 2000); }); function slideFullScreen() { document.open(); document.write(toto); document.close(); initSlides() }  Left Content Lorem markdownum insigne\u0026hellip;  Mid Content Lorem markdownum insigne\u0026hellip;  Right Content Lorem markdownum insigne\u0026hellip;   attributeCreate   testAAA  About\nThis is a footnote.1\nThis is a footnote.2\nattributeCreate   testAAA124141    最近罗列了 Houdini 全面学习的教程菜单 链接\n目前还没有明确的学习计划，毕竟想搞的东西很多，总是会有些莫名其妙的东西占据了优先度（没错说的正是前两周突然就干起来的 字幕上传工具）\n好在没有计划，否则相比计划已经慢了大半截了。\n其实早在做 Minigame 的时候就意识到要把 Houdini 给学起来。（当时还想将程序化操作加到 Minigame 里面，结果速成还远远不够放弃了）\n然而那个时候还没有找到合适的学习姿势，当时还花了很多时间来研究 draw.io\n打算将 Houdini 的节点网络全部截图加上注释说明，这样笔记就可以非常非常详细，虽然很浪费时间，但是和写博客一样应该是值得的。\n然而事实上我却是一味逃避，即便我又花了很多无谓的时间将 Houdini 教程整理好了。\n   诚然打破舒适区学习新的东西比较困难，但是 Houdini 我并不是全新手了，为啥还是没有以前初学时候的动力十足_(:з」∠)_。\n直到最近我才大概想明白其中一点点不对劲的地方。\n学习 Houdini 这种复杂的软件和学习 Maya 或是 Python Qt 开发都是不一样的。\n无论是 Maya 做绑定、调用 Maya API 还是 PySide 做界面 其实都是有一定的套路，无非是查查文档，或者看几个教程熟悉套路就 OK 了。\n但是 Houdini 不一样，它是条条大路通罗马的。\n比起教程按部就班地学习教程的过程，我认为对教程的案例结果进行反推会更好~\n所以这一部教程，我第一次尝试用这种方法来学习 Houdini ，希望自己可以坚持下去。\n 教程地址\n  AHTYA 其实是 adding Houdin to your aresenal 的缩写，并不是什么神秘代号。\n   attributeCreate    \u0026#x21a9;\u0026#xfe0e;\n TEST \u0026#x21a9;\u0026#xfe0e;\n   ","description":"","id":2,"section":"2_examples","tags":["Rohan Dalvi"],"title":"Houdini18 入门教程 Introduction to Houdini","uri":"https://hou.l0v0.com/zh/2_examples/1_beginner/7943b98e/"},{"content":"前言 attributeCreate   12341  attributeCreate   a213t42  1 2  import os     最近罗列了 Houdini 全面学习的教程菜单 链接\n目前还没有明确的学习计划，毕竟想搞的东西很多，总是会有些莫名其妙的东西占据了优先度（没错说的正是前两周突然就干起来的 字幕上传工具）\n好在没有计划，否则相比计划已经慢了大半截了。\n其实早在做 Minigame 的时候就意识到要把 Houdini 给学起来。（当时还想将程序化操作加到 Minigame 里面，结果速成还远远不够放弃了）\n然而那个时候还没有找到合适的学习姿势，当时还花了很多时间来研究 draw.io\n打算将 Houdini 的节点网络全部截图加上注释说明，这样笔记就可以非常非常详细，虽然很浪费时间，但是和写博客一样应该是值得的。\n然而事实上我却是一味逃避，即便我又花了很多无谓的时间将 Houdini 教程整理好了。\n   诚然打破舒适区学习新的东西比较困难，但是 Houdini 我并不是全新手了，为啥还是没有以前初学时候的动力十足_(:з」∠)_。\n直到最近我才大概想明白其中一点点不对劲的地方。\n学习 Houdini 这种复杂的软件和学习 Maya 或是 Python Qt 开发都是不一样的。\n无论是 Maya 做绑定、调用 Maya API 还是 PySide 做界面 其实都是有一定的套路，无非是查查文档，或者看几个教程熟悉套路就 OK 了。\n但是 Houdini 不一样，它是条条大路通罗马的。\n比起教程按部就班地学习教程的过程，我认为对教程的案例结果进行反推会更好~\n所以这一部教程，我第一次尝试用这种方法来学习 Houdini ，希望自己可以坚持下去。\n 教程地址\n  AHTYA 其实是 adding Houdin to your aresenal 的缩写，并不是什么神秘代号。\n 创建集合体   创建一个集合体面片，我之前看了 Pluarasight 的 Vex 基础教程，有提到。 链接 原来我发的链接挂了，这个是中文翻录的链接~\n通过 Vex 的 API 可以构建集合体。\n看教程的时候已经记得代码操作了，好歹之前有做过笔记，有点印象的。 链接\n // 创建一个面片 vector pos1 = set(0,0,0); vector pos2 = set(1,0,0); vector pos3 = set(1,1,0); int p1 = addpoint(0, pos1); int p2 = addpoint(0, pos2); int p3 = addpoint(0, pos3); int prim1 = addprim(0, \u0026quot;poly\u0026quot;); // 注意添加顺序 addvertex(0, prim1, p1); addvertex(0, prim1, p3); addvertex(0, prim1, p2);   通过上面的代码可以创建一个三角形的几何体，注意 Wrangle 节点要选择 Detail 模式执行。\n   教程的做法是用 add 节点。\n   这种做法更加简单直接。\n 多面挤压   第一眼我看到这个效果，我的想法是用 for 循环遍历每一个面进行 extrude 操作。\n随机操作可以用 随机数 加入 for 循环的遍历序号来实现。\n   通过 foreach 循环的 meta 节点可以获取遍历的序号，作为随机数的种子。\n显然这个方法没有利用教程提到 Houdini 数据结构，是比较蠢的方法。\n   创建属性属性随机可以用 Vex 更简单来实现。\n f@weight = rand(@primnum);   教程里面是用 attribute create 节点在 primitive 上创建一个 weight 属性。\n再通过 attribute random 来实现随机数值随机。\n VOP SOP 变形 \n  这个效果除了 Vop Sop 用 turbulance noise 还可以用 mountain 节点，但是显然没有那么灵活。\n   教程里面贴心地介绍了 Turbulance Noise 关于 turbulance 参数的原理\n turbulance 属性每次增加\n就等于多叠加一层\nfrequency * 2\nAmplitude / 2\n的 noise 细节\n  叠加完之后颜色有些差池，但是 pattern 是一致的。\n   Vop 移动模型需要用到 dispalcement 节点\n \n  gain 节点可以在 将中间值 在 最大最小值直接进行过度\n \n  bias 节点可以在 上下 最大最小值直接进行过度 （最大值最小值是两个平面）\n \n  Ramp Spline 类型可以自由编辑曲线实现起伏高度的完全自定义，实现上面视频调整山峰高度的效果。\n加入 abs 节点让高度 负数变为正数 ， 效果就是山谷变成小山丘。\n通过 twoway 节点控制数值输出。\n \n  这个效果加入 3D Noise 来扭曲 1D Noise\n最后也可以在最后输出 加上一个 Turbulance Noise 调大 turbulance 参数来增加 Noise 细节\n 衰变范围控制    \n","description":"Entagma Houdini 入门系列教程","id":3,"section":"2_examples","tags":["Rohan Dalvi"],"title":"Entagma AHTYA 系列教程 Entagma Patreon- Adding Houdini to your Arsenal","uri":"https://hou.l0v0.com/zh/2_examples/1_beginner/32dbb101/"},{"content":"https://www.sidefx.com/docs/houdini/nodes/sop/attribcopy.html\n","description":"Copies attributes between groups of vertices, points, or primitives.","id":4,"section":"1_nodes","tags":null,"title":"Attribute Copy","uri":"https://hou.l0v0.com/zh/1_nodes/sop/37b24259/"}]